name: build

on:
  pull_request:
  push:
    branches:
      - master

env:
  RUSTFLAGS: -Dwarnings
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  draft-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release_drafter.outputs.tag_name }}
    steps:
      - uses: release-drafter/release-drafter@v5
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  static-analysis:
    name: Static analysis
    strategy:
      matrix:
        rust: [stable, nightly]
        runs-on:
          - windows-2019
          - windows-2022
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Update toolchain
        run: rustup update --no-self-update ${{ matrix.rust }} && rustup default ${{ matrix.rust }} && rustup component add clippy
      - name: Run cargo static analysis checks
        run: |
          cargo check
          cargo clippy --all-targets --all-features -- -D clippy::all
          cargo test

  build:
    needs: static-analysis
    strategy:
      matrix:
        rust: [stable, nightly]
        runs-on:
          - windows-2019
          - windows-2022
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup toolchain
        run: |
          rustup update --no-self-update ${{ matrix.rust }} \
          && rustup default ${{ matrix.rust }} \
          && rustup component add clippy \
          && rustup target add aarch64-pc-windows-msvc i686-pc-windows-msvc x86_64-pc-windows-msvc
      - name: Run examples
        run: |
          for example in examples/*.rs
          do
              cargo run --example "$(basename "${example%.rs}")" -- $args
          done
